syntax = "proto3";

package aveplen.config;
option go_package = "github.com/aveplen-bach/config-service;config_service";


service Config {
  rpc GetFaceRecognitionConfig(Ack) returns (FaceRecognitionConfig) {}
  rpc UpdateFaceRecognitionConfig(FaceRecognitionConfig) returns (Ack) {}
  rpc RegisterFaceRecognition(FaceRecognitionRegistration) returns (Ack) {}

  rpc GetS3GatewayConfig(Ack) returns (S3GatewayConfig) {}
  rpc UpdateS3GatewayConfig(S3GatewayConfig) returns (Ack) {}
  rpc RegisterS3Gateway(S3GatewayRegistration) returns (Ack) {}

  rpc GetAuthenticationConfig(Ack) returns (AuthenticationConfig) {}
  rpc UpdateAuthenticationDatabaseConfig(DatabaseConfig) returns (Ack) {}
  rpc RegisterAuthentication(AuthenticationRegistration) returns (Ack) {}

  rpc GetAuthenticationClientConfig(Ack) returns (AuthenticationClientConfig) {}
}

// ================================= utiltity =================================
message Ack {}

// ================================== facerec =================================
message FaceRecognitionConfig {
  double threshold = 1;
}

message FaceRecognitionRegistration {
  string host = 1;
  int32 port = 2;
}

// ================================ s3 gateway ================================
message S3GatewayConfig {
  string host = 1;
  int32 port = 2;
}

message S3GatewayRegistration {
  string host = 1;
  int32 port = 2;
}

// =================================== auth ===================================
message DatabaseConfig {
  string host = 1;
  int32 port = 2;
  string username = 3;
  string password = 4;
  string database = 5;
}

message AuthenticationConfig {
  DatabaseConfig databaseConfig = 1;
  FaceRecognitionRegistration facerecRegistration  = 2;
  S3GatewayRegistration s3GatewayRegistration = 3;
}

message AuthenticationRegistration {
  string host = 1;
  int32 port = 2;
}

// =================================== auth ===================================
message AuthenticationClientConfig {
  AuthenticationRegistration registration = 1;
}